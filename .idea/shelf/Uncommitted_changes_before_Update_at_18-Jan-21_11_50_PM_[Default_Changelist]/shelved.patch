Index: app/src/main/java/com/printhub/printhub/HomeScreen/MainnewActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.printhub.printhub.HomeScreen;\r\n\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Color;\r\nimport android.graphics.Typeface;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.firebase.ui.auth.AuthUI;\r\nimport com.getkeepsafe.taptargetview.TapTarget;\r\nimport com.getkeepsafe.taptargetview.TapTargetSequence;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.iid.FirebaseInstanceId;\r\nimport com.google.firebase.iid.InstanceIdResult;\r\nimport com.google.firebase.messaging.FirebaseMessaging;\r\nimport com.mikepenz.crossfadedrawerlayout.view.CrossfadeDrawerLayout;\r\nimport com.mikepenz.materialdrawer.AccountHeader;\r\nimport com.mikepenz.materialdrawer.AccountHeaderBuilder;\r\nimport com.mikepenz.materialdrawer.Drawer;\r\nimport com.mikepenz.materialdrawer.DrawerBuilder;\r\nimport com.mikepenz.materialdrawer.MiniDrawer;\r\nimport com.mikepenz.materialdrawer.interfaces.ICrossfader;\r\nimport com.mikepenz.materialdrawer.model.DividerDrawerItem;\r\nimport com.mikepenz.materialdrawer.model.PrimaryDrawerItem;\r\nimport com.mikepenz.materialdrawer.model.SecondaryDrawerItem;\r\nimport com.mikepenz.materialdrawer.model.interfaces.IDrawerItem;\r\nimport com.mikepenz.materialdrawer.util.DrawerUIUtils;\r\nimport com.mikepenz.materialize.util.UIUtils;\r\nimport com.printhub.printhub.image.MultipleImages;\r\nimport com.printhub.printhub.sidebar.aboutus.AboutusActivity;\r\nimport com.printhub.printhub.bunkManager.BunkActivity;\r\nimport com.printhub.printhub.Cart;\r\nimport com.printhub.printhub.CheckInternetConnection;\r\nimport com.printhub.printhub.sidebar.HelpCenter;\r\nimport com.printhub.printhub.image.ImageActivity;\r\nimport com.printhub.printhub.NotificationActivity;\r\nimport com.printhub.printhub.sidebar.oldOrders.OrdersActivity;\r\nimport com.printhub.printhub.sidebar.Profile;\r\nimport com.printhub.printhub.R;\r\nimport com.printhub.printhub.WelcomeActivity;\r\nimport com.printhub.printhub.sidebar.Wishlist;\r\nimport com.printhub.printhub.pdf.pdfActivity;\r\nimport com.printhub.printhub.prodcutscategory.Bags;\r\nimport com.printhub.printhub.prodcutscategory.Keychains;\r\nimport com.printhub.printhub.prodcutscategory.Stationary;\r\nimport com.smarteist.autoimageslider.IndicatorAnimations;\r\nimport com.smarteist.autoimageslider.SliderAnimations;\r\nimport com.smarteist.autoimageslider.SliderView;\r\nimport com.webianks.easy_feedback.EasyFeedback;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.content.res.ResourcesCompat;\r\nimport androidx.core.view.GravityCompat;\r\nimport es.dmoral.toasty.Toasty;\r\n\r\npublic class MainnewActivity extends AppCompatActivity {\r\n\r\n   //  private SliderLayout sliderShow;\r\n    private Drawer result;\r\n    private CrossfadeDrawerLayout crossfadeDrawerLayout = null;\r\n\r\n    //to get user session data\r\n    SliderView sliderView;\r\n    SharedPreferences prefs = null;\r\n\r\n    public static String firebaseUserId=null,cityName= null, collegeName= null;\r\n    private FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n    SharedPreferences detail = null;\r\n    DatabaseReference mref;\r\n\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_mainnew);\r\n\r\n        //check Internet Connection\r\n        new CheckInternetConnection(this).checkConnection();\r\n        firebaseUserId=user.getUid();\r\n        mref= FirebaseDatabase.getInstance().getReference();\r\n        detail = getSharedPreferences(\"com.printhub.printhub\", MODE_PRIVATE);\r\n\r\n        Typeface typeface = ResourcesCompat.getFont(this, R.font.blacklist);\r\n        TextView appname = findViewById(R.id.appname);\r\n        appname.setTypeface(typeface);\r\n\r\n        db.collection(\"users\").document(firebaseUserId).get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                if(documentSnapshot.exists()){\r\n                    cityName = documentSnapshot.getString(\"cityName\");\r\n                    collegeName = documentSnapshot.getString(\"collegeName\");\r\n                }\r\n            }\r\n        });\r\n\r\n        //Push notification customer type subscription\r\n        FirebaseMessaging.getInstance().subscribeToTopic(\"general\")\r\n                .addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<Void> task) {\r\n                        String msg = \"successful\";\r\n                        if (!task.isSuccessful()) {\r\n                            msg = \"failed\";\r\n                        }\r\n                        Log.d(\"notification subscription\", msg);\r\n                    }\r\n                });\r\n\r\n        sliderView = findViewById(R.id.slider);\r\n\r\n        prefs = getSharedPreferences(\"com.printhub.printhub\", MODE_PRIVATE);\r\n\r\n        final SliderAdapterExample adapter = new SliderAdapterExample(this);\r\n        adapter.setCount(5);\r\n\r\n        sliderView.setSliderAdapter(adapter);\r\n\r\n        sliderView.setIndicatorAnimation(IndicatorAnimations.DROP); //set indicator animation by using SliderLayout.IndicatorAnimations. :WORM or THIN_WORM or COLOR or DROP or FILL or NONE or SCALE or SCALE_DOWN or SLIDE and SWAP!!\r\n        sliderView.setSliderTransformAnimation(SliderAnimations.SIMPLETRANSFORMATION);\r\n        sliderView.setAutoCycleDirection(SliderView.AUTO_CYCLE_DIRECTION_BACK_AND_FORTH);\r\n        sliderView.setIndicatorSelectedColor(Color.WHITE);\r\n        sliderView.setIndicatorUnselectedColor(Color.GRAY);\r\n        sliderView.setScrollTimeInSec(4); //set scroll delay in seconds :\r\n        sliderView.startAutoCycle();\r\n\r\n        \r\n//\r\n        //retrieve session values and display on listviews\r\n//        //getValues();\r\n//\r\n       //Navigation Drawer with toolbar\r\n       inflateNavDrawer();\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        new CheckInternetConnection(this).checkConnection();\r\n        firebaseUserId = user.getUid();\r\n        if (prefs.getBoolean(\"firstrun\", true)) {\r\n            // Do first run stuff here then set 'firstrun' as false\r\n            tapview();\r\n            // using the following line to edit/commit prefs\r\n            prefs.edit().putBoolean(\"firstrun\", false).commit();\r\n        }\r\n    }\r\n\r\n    private void tapview() {\r\n\r\n            new TapTargetSequence(this)\r\n                    .targets(\r\n                            TapTarget.forView(findViewById(R.id.notifintro), \"Notifications\", \"Latest offers will be available here !\")\r\n                                    .targetCircleColor(R.color.colorAccent)\r\n                                    .titleTextColor(R.color.colorAccent)\r\n                                    .titleTextSize(25)\r\n                                    .descriptionTextSize(15)\r\n                                    .descriptionTextColor(R.color.colorAccent2)\r\n                                    .drawShadow(true)                   // Whether to draw a drop shadow or not\r\n                                    .cancelable(false)                  // Whether tapping outside the outer circle dismisses the view\r\n                                    .tintTarget(true)\r\n                                    .transparentTarget(true)\r\n                                    .outerCircleColor(R.color.first),\r\n                            TapTarget.forView(findViewById(R.id.view_profile), \"Profile\", \"You can view and edit your profile here !\")\r\n                                    .targetCircleColor(R.color.colorAccent)\r\n                                    .titleTextColor(R.color.colorAccent)\r\n                                    .titleTextSize(25)\r\n                                    .descriptionTextSize(15)\r\n                                    .descriptionTextColor(R.color.colorAccent2)\r\n                                    .drawShadow(true)                   // Whether to draw a drop shadow or not\r\n                                    .cancelable(false)                  // Whether tapping outside the outer circle dismisses the view\r\n                                    .tintTarget(true)\r\n                                    .transparentTarget(true)\r\n                                    .outerCircleColor(R.color.third),\r\n                            TapTarget.forView(findViewById(R.id.cart), \"Your Cart\", \"Here is Shortcut to your cart !\")\r\n                                    .targetCircleColor(R.color.colorAccent)\r\n                                    .titleTextColor(R.color.colorAccent)\r\n                                    .titleTextSize(25)\r\n                                    .descriptionTextSize(15)\r\n                                    .descriptionTextColor(R.color.colorAccent2)\r\n                                    .drawShadow(true)\r\n                                    .cancelable(false)// Whether tapping outside the outer circle dismisses the view\r\n                                    .tintTarget(true)\r\n                                    .transparentTarget(true)\r\n                                    .outerCircleColor(R.color.second),\r\n                            TapTarget.forView(findViewById(R.id.visitingcards), \"Categories\", \"Product Categories have been listed here !\")\r\n                                    .targetCircleColor(R.color.colorAccent)\r\n                                    .titleTextColor(R.color.colorAccent)\r\n                                    .titleTextSize(25)\r\n                                    .descriptionTextSize(15)\r\n                                    .descriptionTextColor(R.color.colorAccent2)\r\n                                    .drawShadow(true)\r\n                                    .cancelable(false)// Whether tapping outside the outer circle dismisses the view\r\n                                    .tintTarget(true)\r\n                                    .transparentTarget(true)\r\n                                    .outerCircleColor(R.color.fourth))\r\n                    .listener(new TapTargetSequence.Listener() {\r\n                        // This listener will tell us when interesting(tm) events happen in regards\r\n                        // to the sequence\r\n                        @Override\r\n                        public void onSequenceFinish() {\r\n                            Toasty.success(MainnewActivity.this, \" You are ready to go !\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n\r\n                        @Override\r\n                        public void onSequenceStep(TapTarget lastTarget, boolean targetClicked) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onSequenceCanceled(TapTarget lastTarget) {\r\n                            // Boo\r\n                        }\r\n                    }).start();\r\n\r\n    }\r\n\r\n    private void inflateNavDrawer() {\r\n\r\n        //set Custom toolbar to activity -----------------------------------------------------------\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n\r\n\r\n\r\n        AccountHeader headerResult = new AccountHeaderBuilder()\r\n                .withActivity(this)\r\n                .withHeaderBackground(R.color.gradient_background)\r\n                //.addProfiles(profile)\r\n                .withCompactStyle(true)\r\n                .build();\r\n\r\n        //Adding nav drawer items ------------------------------------------------------------------\r\n        PrimaryDrawerItem item1 = new PrimaryDrawerItem().withIdentifier(1).withName(R.string.home).withIcon(R.drawable.home);\r\n        PrimaryDrawerItem item2 = new PrimaryDrawerItem().withIdentifier(2).withName(R.string.myprofile).withIcon(R.drawable.profile);\r\n        PrimaryDrawerItem item3 = new PrimaryDrawerItem().withIdentifier(3).withName(\"Orders\").withIcon(R.drawable.orders);\r\n        PrimaryDrawerItem item4 = new PrimaryDrawerItem().withIdentifier(4).withName(R.string.wishlist).withIcon(R.drawable.wishlist);\r\n        PrimaryDrawerItem item5 = new PrimaryDrawerItem().withIdentifier(5).withName(R.string.cart).withIcon(R.drawable.cart);\r\n        PrimaryDrawerItem item6 = new PrimaryDrawerItem().withIdentifier(6).withName(R.string.logout).withIcon(R.drawable.logout);\r\n\r\n        SecondaryDrawerItem item7 = new SecondaryDrawerItem().withIdentifier(8).withName(\"Offers\").withIcon(R.drawable.tag);\r\n        SecondaryDrawerItem item8 = new SecondaryDrawerItem().withIdentifier(9).withName(R.string.aboutus).withIcon(R.drawable.credits);\r\n        SecondaryDrawerItem item9 = new SecondaryDrawerItem().withIdentifier(10).withName(R.string.feedback).withIcon(R.drawable.feedback);\r\n        SecondaryDrawerItem item10 = new SecondaryDrawerItem().withIdentifier(11).withName(R.string.helpcentre).withIcon(R.drawable.helpccenter);\r\n\r\n        SecondaryDrawerItem item12 = new SecondaryDrawerItem().withIdentifier(13).withName(\"App Tour\").withIcon(R.drawable.tour);\r\n        SecondaryDrawerItem item13 = new SecondaryDrawerItem().withIdentifier(14).withName(\"Explore\").withIcon(R.drawable.explore);\r\n\r\n\r\n        //creating navbar and adding to the toolbar ------------------------------------------------\r\n        result = new DrawerBuilder()\r\n                .withActivity(this)\r\n                .withToolbar(toolbar)\r\n                .withHasStableIds(true)\r\n                .withDrawerLayout(R.layout.crossfade_drawer)\r\n                .withAccountHeader(headerResult)\r\n                .withDrawerWidthDp(72)\r\n                .withGenerateMiniDrawer(true)\r\n                .withTranslucentStatusBar(true)\r\n                .withActionBarDrawerToggleAnimated(true)\r\n                .addDrawerItems(\r\n                        item1, item2, item3, item4, item5, item6, new DividerDrawerItem(), item7, item8, item9, item10,new DividerDrawerItem(),item12,item13\r\n                )\r\n                .withOnDrawerItemClickListener(new Drawer.OnDrawerItemClickListener() {\r\n                    @Override\r\n                    public boolean onItemClick(View view, int position, IDrawerItem drawerItem) {\r\n\r\n                        switch (position) {\r\n\r\n                            case 1:\r\n                                if (result != null && result.isDrawerOpen()) {\r\n                                    result.closeDrawer();\r\n                                }\r\n                                break;\r\n                            case 2:\r\n                                startActivity(new Intent(MainnewActivity.this, Profile.class));\r\n                                break;\r\n                            case 3:\r\n                                startActivity(new Intent(MainnewActivity.this, OrdersActivity.class));\r\n                                break;\r\n                            case 4:\r\n                                startActivity(new Intent(MainnewActivity.this, Wishlist.class));\r\n                                break;\r\n                            case 5:\r\n                                startActivity(new Intent(MainnewActivity.this, Cart.class));\r\n                                break;\r\n                            case 6:\r\n                                AuthUI.getInstance()\r\n                                        .signOut(MainnewActivity.this)\r\n                                        .addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                                            @Override\r\n                                            public void onComplete(@NonNull Task<Void> task) {\r\n                                                detail.edit().putBoolean(\"fillDetail\", false).commit();\r\n                                                Toasty.success(MainnewActivity.this,\"Logout\", Toast.LENGTH_SHORT).show();\r\n                                                Intent intent = new Intent(MainnewActivity.this, WelcomeActivity.class);\r\n                                                startActivity(intent);\r\n                                                finish();\r\n                                            }\r\n                                        }).addOnFailureListener(new OnFailureListener() {\r\n                                    @Override\r\n                                    public void onFailure(@NonNull Exception e) {\r\n                                        Toasty.success(MainnewActivity.this,\"Logging Out Failed!\", Toast.LENGTH_SHORT).show();\r\n                                    }\r\n                                });\r\n                                break;\r\n\r\n                            case 8:\r\n                                startActivity(new Intent(MainnewActivity.this, NotificationActivity.class));\r\n                                break;\r\n\r\n                            case 9:\r\n                                startActivity(new Intent(MainnewActivity.this, AboutusActivity.class));\r\n                                break;\r\n                            case 10:\r\n                                new EasyFeedback.Builder(MainnewActivity.this)\r\n                                        .withEmail(\"printhub.connect@gmail.com\")\r\n                                        .withSystemInfo()\r\n                                        .build()\r\n                                        .start();\r\n                                break;\r\n                            case 11:\r\n                                startActivity(new Intent(MainnewActivity.this, HelpCenter.class));\r\n                                break;\r\n                            case 13:\r\n                                prefs.edit().putBoolean(\"firstrun\", true).commit();\r\n                                //session.setFirstTimeLaunch(true);\r\n                                startActivity(new Intent(MainnewActivity.this, WelcomeActivity.class));\r\n                                finish();\r\n                                break;\r\n                            case 14:\r\n                                if (result != null && result.isDrawerOpen()) {\r\n                                    result.closeDrawer();\r\n                                }\r\n                                tapview();\r\n                                break;\r\n                            default:\r\n                                Toast.makeText(MainnewActivity.this, \"Default\", Toast.LENGTH_LONG).show();\r\n\r\n                        }\r\n\r\n                        return true;\r\n                    }\r\n                })\r\n                .build();\r\n\r\n        //Setting crossfader drawer------------------------------------------------------------\r\n\r\n        crossfadeDrawerLayout = (CrossfadeDrawerLayout) result.getDrawerLayout();\r\n\r\n        //define maxDrawerWidth\r\n        crossfadeDrawerLayout.setMaxWidthPx(DrawerUIUtils.getOptimalDrawerWidth(this));\r\n\r\n        //add second view (which is the miniDrawer)\r\n        final MiniDrawer miniResult = result.getMiniDrawer();\r\n\r\n        //build the view for the MiniDrawer\r\n        View view = miniResult.build(this);\r\n\r\n        //set the background of the MiniDrawer as this would be transparent\r\n        view.setBackgroundColor(UIUtils.getThemeColorFromAttrOrRes(this, com.mikepenz.materialdrawer.R.attr.material_drawer_background, com.mikepenz.materialdrawer.R.color.material_drawer_background));\r\n\r\n        //we do not have the MiniDrawer view during CrossfadeDrawerLayout creation so we will add it here\r\n        crossfadeDrawerLayout.getSmallView().addView(view, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n\r\n        //define the crossfader to be used with the miniDrawer. This is required to be able to automatically toggle open / close\r\n        miniResult.withCrossFader(new ICrossfader() {\r\n            @Override\r\n            public void crossfade() {\r\n                boolean isFaded = isCrossfaded();\r\n                crossfadeDrawerLayout.crossfade(400);\r\n\r\n                //only close the drawer if we were already faded and want to close it now\r\n                if (isFaded) {\r\n                    result.getDrawerLayout().closeDrawer(GravityCompat.START);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public boolean isCrossfaded() {\r\n                return crossfadeDrawerLayout.isCrossfaded();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        if (result != null && result.isDrawerOpen()) {\r\n            result.closeDrawer();\r\n        } else {\r\n            super.onBackPressed();\r\n        }\r\n    }\r\n//\r\n   public void viewProfile(View view) {\r\n        startActivity(new Intent(MainnewActivity.this, Profile.class));\r\n   }\r\n\r\n   public void viewCart(View view) {\r\n        startActivity(new Intent(MainnewActivity.this, Cart.class));\r\n    }\r\n\r\n    public void Notifications(View view) {\r\n        startActivity(new Intent(MainnewActivity.this, NotificationActivity.class));\r\n    }\r\n\r\n    public void cardsActivity(View view) {\r\n        Intent intent= new Intent(MainnewActivity.this, MultipleImages.class);\r\n        String uploadkey = mref.push().getKey();\r\n        intent.putExtra(\"uploadkey\",uploadkey);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void tshirtActivity(View view) {\r\n        Intent intent= new Intent(MainnewActivity.this , pdfActivity.class);\r\n        String uploadkey = mref.push().getKey();\r\n        intent.putExtra(\"uploadkey\",uploadkey);\r\n        startActivity(intent);\r\n    }\r\n\r\n\r\n    public void bagsActivity(View view) {\r\n\r\n        startActivity(new Intent(MainnewActivity.this, Bags.class));\r\n    }\r\n\r\n    public void stationaryAcitivity(View view) {\r\n\r\n        startActivity(new Intent(MainnewActivity.this, Stationary.class));\r\n    }\r\n\r\n    public void calendarsActivity(View view) {\r\n\r\n        startActivity(new Intent(MainnewActivity.this, BunkActivity.class));\r\n    }\r\n\r\n    public void keychainsActivity(View view) {\r\n\r\n        startActivity(new Intent(MainnewActivity.this, Keychains.class));\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/printhub/printhub/HomeScreen/MainnewActivity.java	(revision ee9e3a0e7107371c589f2a57c7d3ad03245f0c95)
+++ app/src/main/java/com/printhub/printhub/HomeScreen/MainnewActivity.java	(date 1610973408611)
@@ -41,6 +41,8 @@
 import com.mikepenz.materialdrawer.model.interfaces.IDrawerItem;
 import com.mikepenz.materialdrawer.util.DrawerUIUtils;
 import com.mikepenz.materialize.util.UIUtils;
+import com.printhub.printhub.clubEvents.clubActivity;
+import com.printhub.printhub.clubEvents.postEvent;
 import com.printhub.printhub.image.MultipleImages;
 import com.printhub.printhub.sidebar.aboutus.AboutusActivity;
 import com.printhub.printhub.bunkManager.BunkActivity;
@@ -454,7 +456,7 @@
 
     public void keychainsActivity(View view) {
 
-        startActivity(new Intent(MainnewActivity.this, Keychains.class));
+        startActivity(new Intent(MainnewActivity.this, postEvent.class));
     }
 
 }
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision ee9e3a0e7107371c589f2a57c7d3ad03245f0c95)
+++ .idea/gradle.xml	(date 1608050599659)
@@ -4,7 +4,7 @@
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
-        <option name="testRunner" value="PLATFORM" />
+        <option name="testRunner" value="GRADLE" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
         <option name="modules">
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.printhub.printhub\">\r\n\r\n    <uses-permission android:name=\"android:name = android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity android:name=\".image.MultipleImages\"></activity>\r\n        <activity android:name=\".sidebar.oldOrders.OrdersActivity\" />\r\n        <activity android:name=\".openingaActivity.SplashActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity> <!-- <activity -->\r\n        <!-- android:name=\".prodcutscategory.Cards\" -->\r\n        <!-- android:theme=\"@style/WhiteTheme\" /> -->\r\n\r\n\r\n        <meta-data\r\n            android:name=\"com.google.firebase.messaging.default_notification_icon\"\r\n            android:resource=\"@drawable/notification\"/>\r\n        <meta-data\r\n            android:name=\"com.google.firebase.messaging.default_notification_color\"\r\n            android:resource=\"@color/colorAccent\" />\r\n\r\n        <meta-data\r\n            android:name=\"com.google.firebase.messaging.default_notification_channel_id\"\r\n            android:value=\"@string/title_notifications\" />\r\n\r\n        <service android:name=\".MessangingService.MyFirebaseMessagingService\">\r\n        <intent-filter>\r\n        <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n        </intent-filter>\r\n        </service>\r\n\r\n\r\n\r\n        <activity\r\n            android:name=\".prodcutscategory.Bags\"\r\n            android:theme=\"@style/WhiteTheme\" />\r\n        <activity\r\n            android:name=\".prodcutscategory.Keychains\"\r\n            android:theme=\"@style/WhiteTheme\" />\r\n        <activity\r\n            android:name=\".prodcutscategory.Stationary\"\r\n            android:theme=\"@style/WhiteTheme\" />\r\n        <activity android:name=\".HomeScreen.MainnewActivity\" />\r\n        <activity android:name=\".sidebar.Profile\" />\r\n        <activity android:name=\".sidebar.Wishlist\" />\r\n        <activity android:name=\".Cart\" />\r\n        <activity android:name=\".sidebar.HelpCenter\" />\r\n        <activity android:name=\".OrderDetails\" />\r\n        <activity android:name=\".OrderPlaced\" />\r\n        <activity android:name=\".IndividualProduct\" />\r\n        <activity android:name=\".NotificationActivity\" />\r\n        <activity android:name=\".WelcomeActivity\" />\r\n        <activity android:name=\".sidebar.aboutus.AboutusActivity\" />\r\n        <activity android:name=\".bunkManager.BunkActivity\" />\r\n        <activity android:name=\".registration.DetailActivity\" />\r\n        <activity android:name=\".image.ImageActivity\" />\r\n        <activity android:name=\".pdf.pdfActivity\" />\r\n        <activity android:name=\".bunkManager.EditSub\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.DEFAULT\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision ee9e3a0e7107371c589f2a57c7d3ad03245f0c95)
+++ app/src/main/AndroidManifest.xml	(date 1610969682725)
@@ -14,7 +14,9 @@
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/AppTheme">
-        <activity android:name=".image.MultipleImages"></activity>
+        <activity android:name=".clubEvents.postEvent"></activity>
+        <activity android:name=".clubEvents.clubActivity" />
+        <activity android:name=".image.MultipleImages" />
         <activity android:name=".sidebar.oldOrders.OrdersActivity" />
         <activity android:name=".openingaActivity.SplashActivity">
             <intent-filter>
@@ -25,27 +27,22 @@
         </activity> <!-- <activity -->
         <!-- android:name=".prodcutscategory.Cards" -->
         <!-- android:theme="@style/WhiteTheme" /> -->
-
-
         <meta-data
             android:name="com.google.firebase.messaging.default_notification_icon"
-            android:resource="@drawable/notification"/>
+            android:resource="@drawable/notification" />
         <meta-data
             android:name="com.google.firebase.messaging.default_notification_color"
             android:resource="@color/colorAccent" />
-
         <meta-data
             android:name="com.google.firebase.messaging.default_notification_channel_id"
             android:value="@string/title_notifications" />
 
         <service android:name=".MessangingService.MyFirebaseMessagingService">
-        <intent-filter>
-        <action android:name="com.google.firebase.MESSAGING_EVENT" />
-        </intent-filter>
+            <intent-filter>
+                <action android:name="com.google.firebase.MESSAGING_EVENT" />
+            </intent-filter>
         </service>
 
-
-
         <activity
             android:name=".prodcutscategory.Bags"
             android:theme="@style/WhiteTheme" />
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel target=\"1.8\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(revision ee9e3a0e7107371c589f2a57c7d3ad03245f0c95)
+++ .idea/compiler.xml	(date 1608050674398)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="1.8" />
+    <bytecodeTargetLevel target="11" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision ee9e3a0e7107371c589f2a57c7d3ad03245f0c95)
+++ .idea/misc.xml	(date 1608050674205)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="false" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
