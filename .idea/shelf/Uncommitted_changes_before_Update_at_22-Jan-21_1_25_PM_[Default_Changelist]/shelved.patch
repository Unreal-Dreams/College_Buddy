Index: app/src/main/java/com/printhub/printhub/clubEvents/mEventsAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.printhub.printhub.clubEvents;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.text.TextUtils;\r\nimport android.text.format.DateFormat;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.MultiAutoCompleteTextView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.printhub.printhub.R;\r\nimport com.printhub.printhub.bunkManager.Subjectlist;\r\nimport com.printhub.printhub.prodcutscategory.Stationary;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\nimport javax.security.auth.login.LoginException;\r\n\r\nimport io.grpc.internal.LogExceptionRunnable;\r\n\r\nimport static com.printhub.printhub.HomeScreen.MainnewActivity.cityName;\r\nimport static com.printhub.printhub.HomeScreen.MainnewActivity.collegeName;\r\nimport static com.printhub.printhub.HomeScreen.MainnewActivity.firebaseUserId;\r\n\r\npublic class mEventsAdapter extends RecyclerView.Adapter<mEventsAdapter.ViewHolder> {\r\n\r\n    List<EventsClass> blog_list;\r\n    Context context;\r\n    private FirebaseFirestore db;\r\n    public mEventsAdapter( List<EventsClass> blog_list,Context context) {\r\n        this.blog_list=blog_list;\r\n        this.context= context;\r\n    }\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(@NonNull  ViewGroup parent, int viewType) {\r\n        View view= LayoutInflater.from(parent.getContext()).inflate(R.layout.club_events_cardlayout,parent,false);\r\n         db= FirebaseFirestore.getInstance();\r\n        return new ViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull  ViewHolder holder, int position) {\r\n        EventsClass eventsClass=blog_list.get(position);\r\n        holder.setDescText(eventsClass.getDescription());\r\n        holder.setName(eventsClass.clubName);\r\n        holder.setTime(eventsClass.getActivityTime());\r\n        holder.setDate(eventsClass.getActivityDate());\r\n        Picasso.with(context).load(eventsClass.getImageUrl()).into(holder.clubEventPost);\r\n        holder.setName(eventsClass.getClubName());\r\n\r\n\r\n\r\n        long milliseconds=blog_list.get(position).getTimestamp().getTime();\r\n        String dateString= DateFormat.format(\"dd/MM/yyyy\",new Date(milliseconds)).toString();\r\n        holder.setPostingTime(dateString);\r\n\r\n    }\r\n    @Override\r\n    public int getItemCount() {\r\n        return blog_list.size();\r\n    }\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        private View mView;\r\n        private MultiAutoCompleteTextView descView;\r\n        private TextView timeTextView, dateTextView;\r\n        ImageView clubEventPost;\r\n        private TextView blogDate,authorName;\r\n        public ViewHolder(@NonNull  View itemView) {\r\n\r\n            super(itemView);\r\n            mView=itemView;\r\n            clubEventPost= mView.findViewById(R.id.clubEventPost);\r\n            //descView=mView.findViewById(R.id.blog_desc);\r\n        }\r\n\r\n        public void setDate(String date){\r\n            dateTextView=mView.findViewById(R.id.clubEventDate);\r\n            dateTextView.setText(date);\r\n        }\r\n\r\n        public void setTime(String time){\r\n            timeTextView=mView.findViewById(R.id.clubEventTime);\r\n            timeTextView.setText(time);\r\n        }\r\n\r\n        public void setDescText(String descText){\r\n            descView=mView.findViewById(R.id.blog_desc);\r\n            descView.setText(descText);\r\n        }\r\n        public void setPostingTime(String date){\r\n            blogDate=mView.findViewById(R.id.blogdate);\r\n            blogDate.setText(\"posted date:\"+date);\r\n        }\r\n\r\n        public void setName(String name){\r\n            authorName=mView.findViewById(R.id.authorName);\r\n            authorName.setText(name);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/printhub/printhub/clubEvents/mEventsAdapter.java	(revision 11f8c521c4fa9c976287968d351de88954b5bfee)
+++ app/src/main/java/com/printhub/printhub/clubEvents/mEventsAdapter.java	(date 1611263354604)
@@ -2,12 +2,14 @@
 
 import android.app.Activity;
 import android.content.Context;
+import android.content.Intent;
 import android.text.TextUtils;
 import android.text.format.DateFormat;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.Button;
 import android.widget.ImageView;
 import android.widget.MultiAutoCompleteTextView;
 import android.widget.TextView;
@@ -16,6 +18,7 @@
 import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
 
+import com.allyants.notifyme.NotifyMe;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.android.gms.tasks.Task;
@@ -26,6 +29,9 @@
 import com.printhub.printhub.prodcutscategory.Stationary;
 import com.squareup.picasso.Picasso;
 
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
 import java.util.Date;
 import java.util.List;
 
@@ -63,7 +69,32 @@
         Picasso.with(context).load(eventsClass.getImageUrl()).into(holder.clubEventPost);
         holder.setName(eventsClass.getClubName());
 
-
+        holder.reminderButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                Calendar calendar=Calendar.getInstance();
+                SimpleDateFormat simpleDateFormat= new SimpleDateFormat("dd/MM/yyyy hh:mm aa");
+                try {
+                    calendar.setTime(simpleDateFormat.parse(eventsClass.getActivityDate()+" "+eventsClass.getActivityTime()));
+                    Log.e("Time",calendar.getTime().toString());
+                } catch (ParseException e) {
+                    e.printStackTrace();
+                }
+                NotifyMe notifyMe = new NotifyMe.Builder(context)
+                        .title("Hey")
+                        .content("Lets go")
+                        .color(255,0,0,255)
+                        .led_color(255,255,255,255)
+                        .time(calendar)
+                  //      .addAction(intent,"Snooze",false)
+                        .key("test")
+                    //    .addAction(new Intent(),"Dismiss",true,false)
+                      //  .addAction(intent,"Done")
+                        .large_icon(R.mipmap.ic_launcher_round)
+                        .rrule("FREQ=MINUTELY;INTERVAL=5;COUNT=2")
+                        .build();
+            }
+        });
 
         long milliseconds=blog_list.get(position).getTimestamp().getTime();
         String dateString= DateFormat.format("dd/MM/yyyy",new Date(milliseconds)).toString();
@@ -81,11 +112,13 @@
         private MultiAutoCompleteTextView descView;
         private TextView timeTextView, dateTextView;
         ImageView clubEventPost;
+        private Button reminderButton;
         private TextView blogDate,authorName;
         public ViewHolder(@NonNull  View itemView) {
 
             super(itemView);
             mView=itemView;
+            reminderButton=mView.findViewById(R.id.reminderButton);
             clubEventPost= mView.findViewById(R.id.clubEventPost);
             //descView=mView.findViewById(R.id.blog_desc);
         }
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\n\r\nandroid {\r\n    compileSdkVersion 29\r\n    buildToolsVersion \"29.0.2\"\r\n    defaultConfig {\r\n        applicationId \"com.printhub.signup\"\r\n        minSdkVersion 24\r\n        targetSdkVersion 29\r\n        versionCode 3\r\n        versionName \"1.1.1\"\r\n        useLibrary 'org.apache.http.legacy'\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    buildTypes {\r\n        release {\r\n            debuggable = true\r\n            jniDebuggable = true\r\n            renderscriptDebuggable = true\r\n        }\r\n        debug {\r\n            debuggable = true\r\n            jniDebuggable = true\r\n            renderscriptDebuggable = true\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = 1.8\r\n        targetCompatibility = 1.8\r\n\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation 'androidx.appcompat:appcompat:1.1.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\r\n    implementation 'com.google.firebase:firebase-core:17.2.2'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-auth:19.2.0'\r\n    implementation 'com.firebaseui:firebase-ui-auth:4.3.1'\r\n    implementation 'com.google.firebase:firebase-storage:19.1.0'\r\n    implementation 'com.google.firebase:firebase-database:19.2.0'\r\n    implementation 'com.google.firebase:firebase-firestore:17.1.2'\r\n    implementation 'com.google.firebase:firebase-messaging:21.0.0'\r\n    implementation 'com.google.firebase:firebase-analytics:18.0.0'\r\n    testImplementation 'junit:junit:4.13'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.1'\r\n    implementation 'com.google.android.material:material:1.1.0'\r\n    androidTestImplementation 'androidx.test:runner:1.2.0'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\r\n    implementation 'com.itextpdf:itextg:5.5.10'\r\n    implementation 'com.squareup.picasso:picasso:2.5.2'\r\n    implementation 'com.github.bumptech.glide:glide:4.10.0'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'\r\n    implementation 'com.shreyaspatil:EasyUpiPayment:2.0'\r\n    implementation 'com.cepheuen.elegant-number-button:lib:1.0.2'\r\n\r\n//    bunk\r\n    implementation 'androidx.navigation:navigation-fragment:2.1.0'\r\n    implementation 'androidx.navigation:navigation-ui:2.1.0'\r\n    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'\r\n\r\n    implementation 'com.airbnb.android:lottie:3.3.1'\r\n    implementation 'com.daimajia.androidanimations:library:2.3@aar'\r\n    implementation 'com.daimajia.easing:library:2.0@aar'\r\n    implementation 'com.geniusforapp.fancydialog:FancyDialog:0.1.4'\r\n    implementation 'com.getkeepsafe.taptargetview:taptargetview:1.11.0'\r\n    implementation 'com.github.GrenderG:Toasty:1.4.2'\r\n    implementation('com.mikepenz:aboutlibraries:6.0.2@aar') {\r\n        transitive = true\r\n    }\r\n    implementation(\"com.mikepenz:materialdrawer:6.0.3@aar\") {\r\n        transitive = true\r\n    }\r\n    implementation('com.mikepenz:crossfadedrawerlayout:1.0.1@aar')\r\n    implementation 'com.webianks.library:easy-feedback:1.0.5'\r\n    implementation 'com.tomer:fadingtextview:2.5'\r\n    implementation 'com.github.smarteist:autoimageslider:1.3.2'\r\n    implementation 'de.hdodenhof:circleimageview:3.0.0'\r\n    implementation 'com.jakewharton:butterknife:10.0.0'\r\n    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'\r\n    implementation 'com.michaelpardo:activeandroid:3.1.0-SNAPSHOT'\r\n    //radiogroup\r\n    implementation 'com.github.Gavras:MultiLineRadioGroup:v1.0.0.6'\r\n    implementation 'com.rengwuxian.materialedittext:library:2.1.4'\r\n    //Stylish edittextbox\r\n    implementation 'com.github.florent37:materialtextfield:1.0.7'\r\n    implementation 'com.android.volley:volley:1.1.0'\r\n    implementation 'com.kaopiz:kprogresshud:1.1.0'\r\n    // Dexter runtime permissions\r\n    implementation 'com.karumi:dexter:4.2.0'\r\n    implementation 'com.firebaseui:firebase-ui:0.4.4'\r\n\r\n    implementation 'com.github.barteksc:android-pdf-viewer:2.8.2'\r\n    implementation 'com.google.firebase:firebase-messaging'\r\n\r\n    //Compressor and Crop Image\r\n    implementation 'id.zelory:compressor:2.1.0'\r\n    api 'com.theartofdev.edmodo:android-image-cropper:2.8.+'\r\n\r\n    // paytm dependency\r\n    implementation('com.paytm:pgplussdk:1.4.4') {\r\n        transitive = true;\r\n    }\r\n\r\n    //algolia dependency\r\n    implementation 'com.algolia:algoliasearch-android:3.+'\r\n\r\n}\r\napply plugin: 'com.google.gms.google-services'\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 11f8c521c4fa9c976287968d351de88954b5bfee)
+++ app/build.gradle	(date 1611245268109)
@@ -107,5 +107,7 @@
     //algolia dependency
     implementation 'com.algolia:algoliasearch-android:3.+'
 
+    //Notify Me
+    implementation 'com.github.jakebonk:NotifyMe:1.0.1'
 }
 apply plugin: 'com.google.gms.google-services'
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.printhub.printhub\">\r\n\r\n    <uses-permission android:name=\"android:name = android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"com.google.android.c2dm.permission.RECEIVE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity android:name=\".WebServices.MainActivityWeb\"></activity>\r\n        <activity android:name=\".WebServices.WebViewActivity\" />\r\n        <activity android:name=\".collab.collabPostActivity\" />\r\n        <activity android:name=\".collab.collabActivity\" />\r\n        <activity android:name=\".clubEvents.postEvent\" />\r\n        <activity android:name=\".clubEvents.clubActivity\" />\r\n        <activity android:name=\".image.MultipleImages\" />\r\n        <activity android:name=\".image.docCategoryChooser\" />\r\n        <activity android:name=\".sidebar.oldOrders.OrdersActivity\" />\r\n        <activity android:name=\".openingaActivity.SplashActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity> <!-- <activity -->\r\n        <!-- android:name=\".prodcutscategory.Cards\" -->\r\n        <!-- android:theme=\"@style/WhiteTheme\" /> -->\r\n        <activity\r\n            android:name=\".prodcutscategory.Bags\"\r\n            android:theme=\"@style/WhiteTheme\" />\r\n        <activity\r\n            android:name=\".prodcutscategory.Keychains\"\r\n            android:theme=\"@style/WhiteTheme\" />\r\n        <activity\r\n            android:name=\".prodcutscategory.Stationary\"\r\n            android:theme=\"@style/WhiteTheme\" />\r\n        <activity android:name=\".HomeScreen.MainnewActivity\" />\r\n        <activity android:name=\".sidebar.Profile\" />\r\n        <activity android:name=\".sidebar.Wishlist\" />\r\n        <activity android:name=\".Cart\" />\r\n        <activity android:name=\".sidebar.HelpCenter\" />\r\n        <activity android:name=\".OrderDetails\" />\r\n        <activity android:name=\".OrderPlaced\" />\r\n        <activity android:name=\".IndividualProduct\" />\r\n        <activity android:name=\".NotificationActivity\" />\r\n        <activity android:name=\".WelcomeActivity\" />\r\n        <activity android:name=\".sidebar.aboutus.AboutusActivity\" />\r\n        <activity android:name=\".bunkManager.BunkActivity\" />\r\n        <activity android:name=\".registration.DetailActivity\" />\r\n        <activity android:name=\".image.ImageActivity\" />\r\n        <activity android:name=\".pdf.pdfActivity\" />\r\n        <activity android:name=\".bunkManager.EditSub\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.DEFAULT\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\"com.theartofdev.edmodo.cropper.CropImageActivity\"\r\n            android:theme=\"@style/Base.Theme.AppCompat\" />\r\n\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 11f8c521c4fa9c976287968d351de88954b5bfee)
+++ app/src/main/AndroidManifest.xml	(date 1611234943368)
@@ -15,7 +15,8 @@
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/AppTheme">
-        <activity android:name=".WebServices.MainActivityWeb"></activity>
+        <activity android:name=".prodcutscategory.StationaryCategory"></activity>
+        <activity android:name=".WebServices.MainActivityWeb" />
         <activity android:name=".WebServices.WebViewActivity" />
         <activity android:name=".collab.collabPostActivity" />
         <activity android:name=".collab.collabActivity" />
Index: app/src/main/java/com/printhub/printhub/prodcutscategory/Stationary.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.printhub.printhub.prodcutscategory;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Paint;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AbsListView;\r\nimport android.widget.ImageView;\r\nimport android.widget.SearchView;\r\nimport android.widget.TextView;\r\n\r\nimport com.airbnb.lottie.LottieAnimationView;\r\nimport com.algolia.search.saas.AlgoliaException;\r\nimport com.algolia.search.saas.Client;\r\nimport com.algolia.search.saas.CompletionHandler;\r\nimport com.algolia.search.saas.Index;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.Query;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.printhub.printhub.Cart;\r\nimport com.printhub.printhub.CheckInternetConnection;\r\nimport com.printhub.printhub.IndividualProduct;\r\nimport com.printhub.printhub.R;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.recyclerview.widget.StaggeredGridLayoutManager;\r\n\r\nimport static com.printhub.printhub.HomeScreen.MainnewActivity.cityName;\r\nimport static com.printhub.printhub.HomeScreen.MainnewActivity.collegeName;\r\n\r\n\r\npublic class Stationary extends AppCompatActivity {\r\n\r\n    private RecyclerView mRecyclerView;\r\n    private StaggeredGridLayoutManager mLayoutManager;\r\n    private LottieAnimationView tv_no_item;\r\n    Boolean isScrolling = false, algoliaResult = false;\r\n    int totalItems, scrolledOutItems;\r\n    private LinearLayoutManager manager;\r\n    Query query;\r\n    private SearchView searchView;\r\n\r\n    //Getting reference to Firebase Database\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private DocumentSnapshot lastDocumentSnapshot;\r\n\r\n    Client client;\r\n    Index index;\r\n\r\n    private MyAdapter myAdapter;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_cards);\r\n\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n\r\n\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n        getSupportActionBar().setDisplayShowHomeEnabled(true);\r\n\r\n        //check Internet Connection\r\n        new CheckInternetConnection(this).checkConnection();\r\n\r\n        //Initializing our Recyclerview\r\n        mRecyclerView = findViewById(R.id.my_recycler_view);\r\n        tv_no_item = findViewById(R.id.tv_no_cards);\r\n        searchView = findViewById(R.id.product_search);\r\n\r\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                com.algolia.search.saas.Query query1 = new com.algolia.search.saas.Query(query);\r\n                index.searchAsync(query1, new CompletionHandler() {\r\n                    @Override\r\n                    public void requestCompleted(@Nullable JSONObject jsonObject, @Nullable AlgoliaException e) {\r\n                        myAdapter.delete();\r\n                        lastDocumentSnapshot =null;\r\n                        try {\r\n                            algoliaResult = true;\r\n                            JSONArray hits = jsonObject.getJSONArray(\"hits\");\r\n                            for (int i = 0; i < hits.length(); i++) {\r\n                                JSONObject jsonObject1 = hits.getJSONObject(i);\r\n                                String productName = jsonObject1.getString(\"productName\");\r\n                                String key = jsonObject1.getString(\"key\");\r\n                                String price = jsonObject1.getString(\"price\");\r\n                                String mrp = jsonObject1.getString(\"mrp\");\r\n                                String discount = jsonObject1.getString(\"discount\");\r\n                                String productImage = jsonObject1.getString(\"productImage\");\r\n                                ((MyAdapter) mRecyclerView.getAdapter()).update(productName, key, price, mrp, discount, productImage);\r\n                            }\r\n                        } catch (JSONException ex) {\r\n                            ex.printStackTrace();\r\n                        }\r\n                        mRecyclerView.setAdapter(myAdapter);\r\n                    }\r\n                });\r\n                return true;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                if(newText.equals(\"\")){\r\n                    myAdapter.delete();\r\n                    LoadData();\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n\r\n        if (mRecyclerView != null) {\r\n            //to enable optimization of recyclerview\r\n            mRecyclerView.setHasFixedSize(true);\r\n        }\r\n        client = new Client(\"YAZKW5QXDE\", \"de7815917e97dab0d0ac258dd0bf1d03\");\r\n        index = client.getIndex(cityName + \"_\" + collegeName);\r\n\r\n\r\n        LoadData();\r\n\r\n        manager = new LinearLayoutManager(this);\r\n        mRecyclerView.setLayoutManager(manager);\r\n        myAdapter = new MyAdapter(mRecyclerView, Stationary.this, new ArrayList<String>(), new ArrayList<String>(), new ArrayList<String>(), new ArrayList<String>(), new ArrayList<String>(), new ArrayList<String>());\r\n        mRecyclerView.setAdapter(myAdapter);\r\n        mRecyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {\r\n            @Override\r\n            public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newState) {\r\n                super.onScrollStateChanged(recyclerView, newState);\r\n                if (newState == AbsListView.OnScrollListener.SCROLL_STATE_TOUCH_SCROLL) {\r\n                    isScrolling = true;\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {\r\n                super.onScrolled(recyclerView, dx, dy);\r\n                totalItems = manager.getItemCount();\r\n                scrolledOutItems = manager.findLastVisibleItemPosition();\r\n                if (isScrolling && scrolledOutItems + 1 >= totalItems) {\r\n                    isScrolling = false;\r\n                    LoadData();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void LoadData() {\r\n        algoliaResult = false;\r\n        if (lastDocumentSnapshot == null) {\r\n            query = db.collection(cityName).document(collegeName).collection(\"products\").limit(10);\r\n        } else {\r\n            query = db.collection(cityName).document(collegeName).collection(\"products\").startAfter(lastDocumentSnapshot).limit(10);\r\n        }\r\n        query.get().addOnSuccessListener(this, new OnSuccessListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n                for (QueryDocumentSnapshot documentSnapshot : queryDocumentSnapshots) {\r\n                    lastDocumentSnapshot = documentSnapshot;\r\n                    if (tv_no_item.getVisibility() == View.VISIBLE) {\r\n                        tv_no_item.setVisibility(View.GONE);\r\n                    }\r\n                    String productName = documentSnapshot.getString(\"productName\");\r\n                    String key = documentSnapshot.getId();\r\n                    String price = documentSnapshot.getString(\"price\");\r\n                    String mrp = documentSnapshot.getString(\"mrp\");\r\n                    String discount = documentSnapshot.getString(\"discount\");\r\n                    String productImage = documentSnapshot.getString(\"productImage\");\r\n                    ((MyAdapter) mRecyclerView.getAdapter()).update(productName, key, price, mrp, discount, productImage);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public void viewCart(View view) {\r\n        startActivity(new Intent(Stationary.this, Cart.class));\r\n        finish();\r\n    }\r\n\r\n\r\n//    //viewHolder for our Firebase UI\r\n//    public static class MovieViewHolder extends RecyclerView.ViewHolder {\r\n//\r\n//        TextView cardname;\r\n//        ImageView cardimage;\r\n//        TextView cardprice;\r\n//\r\n//        View mView;\r\n//\r\n//        public MovieViewHolder(View v) {\r\n//            super(v);\r\n//            mView = v;\r\n//            cardname = v.findViewById(R.id.cardcategory);\r\n//            cardimage = v.findViewById(R.id.cardimage);\r\n//            cardprice = v.findViewById(R.id.cardprice);\r\n//        }\r\n//    }\r\n\r\n\r\n    @Override\r\n    public boolean onSupportNavigateUp() {\r\n        if (algoliaResult) {\r\n            myAdapter.delete();\r\n            LoadData();\r\n            searchView.setQuery(\"\", false);\r\n            searchView.setIconified(true);\r\n        } else {\r\n            onBackPressed();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        if (algoliaResult) {\r\n            myAdapter.delete();\r\n            LoadData();\r\n            searchView.setQuery(\"\", false);\r\n            searchView.setIconified(true);\r\n        } else {\r\n            super.onBackPressed();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n\r\n        //check Internet Connection\r\n        new CheckInternetConnection(this).checkConnection();\r\n    }\r\n\r\n    public class MyAdapter extends RecyclerView.Adapter<MyAdapter.ViewHolder> {\r\n\r\n        RecyclerView recyclerView;\r\n        Context context;\r\n        ArrayList<String> productNames = new ArrayList<>();\r\n        ArrayList<String> keys = new ArrayList<>();\r\n        ArrayList<String> prices = new ArrayList<>();\r\n        ArrayList<String> mrps = new ArrayList<>();\r\n        ArrayList<String> discounts = new ArrayList<>();\r\n        ArrayList<String> productImages = new ArrayList<>();\r\n\r\n\r\n        public void update(String productName, String key, String price, String mrp, String discount, String productImage) {\r\n            productNames.add(productName);\r\n            keys.add(key);\r\n            prices.add(price);\r\n            mrps.add(mrp);\r\n            discounts.add(discount);\r\n            productImages.add(productImage);\r\n            notifyDataSetChanged();  //refershes the recyler view automatically...\r\n        }\r\n\r\n\r\n        public MyAdapter(RecyclerView recyclerView, Context context, ArrayList<String> productNames, ArrayList<String> keys, ArrayList<String> prices, ArrayList<String> mrps, ArrayList<String> discounts, ArrayList<String> productImages) {\r\n            this.recyclerView = recyclerView;\r\n            this.context = context;\r\n            this.productNames = productNames;\r\n            this.keys = keys;\r\n            this.prices = prices;\r\n            this.mrps = mrps;\r\n            this.discounts = discounts;\r\n            this.productImages = productImages;\r\n        }\r\n\r\n        public void delete() {\r\n            productNames.clear();\r\n            keys.clear();\r\n            prices.clear();\r\n            mrps.clear();\r\n            discounts.clear();\r\n            productImages.clear();\r\n        }\r\n\r\n        @NonNull\r\n        @Override\r\n        public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {//to create a view for recycle view items\r\n            View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.product_item, parent, false);\r\n            return new ViewHolder(view);\r\n        }\r\n\r\n        @Override\r\n        public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\r\n            //initialise the elements of indiv items...\r\n            holder.productName.setText(productNames.get(position));\r\n            holder.price.setText(\"Rs. \" + prices.get(position));\r\n            holder.mrp.setText(mrps.get(position));\r\n            holder.discount.setText(discounts.get(position) + \"% off\");\r\n            Picasso.with(Stationary.this).load(productImages.get(position)).into(holder.productImage);\r\n        }\r\n\r\n        @Override\r\n        public int getItemCount() {//return the no of items\r\n            return productNames.size();\r\n        }\r\n\r\n        public class ViewHolder extends RecyclerView.ViewHolder {\r\n\r\n            TextView quantity, productName, price, mrp, discount;\r\n            ImageView productImage;\r\n\r\n            public ViewHolder(@NonNull final View itemView) {\r\n                super(itemView);\r\n                quantity = itemView.findViewById(R.id.quantityTextView);\r\n                productName = itemView.findViewById(R.id.productname);\r\n                price = itemView.findViewById(R.id.price);\r\n                mrp = itemView.findViewById(R.id.mrp);\r\n                mrp.setPaintFlags(mrp.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);\r\n                discount = itemView.findViewById(R.id.discount);\r\n                productImage = itemView.findViewById(R.id.productimage);\r\n                itemView.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View view) {\r\n                        int position = recyclerView.getChildAdapterPosition(view);\r\n                        Intent intent = new Intent(Stationary.this, IndividualProduct.class);\r\n                        intent.putExtra(\"key\", keys.get(position));\r\n                        startActivity(intent);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/printhub/printhub/prodcutscategory/Stationary.java	(revision 11f8c521c4fa9c976287968d351de88954b5bfee)
+++ app/src/main/java/com/printhub/printhub/prodcutscategory/Stationary.java	(date 1611241276243)
@@ -64,6 +64,7 @@
 
     Client client;
     Index index;
+    private  String category;
 
     private MyAdapter myAdapter;
 
@@ -83,6 +84,10 @@
         //check Internet Connection
         new CheckInternetConnection(this).checkConnection();
 
+        //Loading Category
+        Intent intent = getIntent();
+        category= intent.getExtras().getString("Link");
+
         //Initializing our Recyclerview
         mRecyclerView = findViewById(R.id.my_recycler_view);
         tv_no_item = findViewById(R.id.tv_no_cards);
@@ -170,9 +175,9 @@
     private void LoadData() {
         algoliaResult = false;
         if (lastDocumentSnapshot == null) {
-            query = db.collection(cityName).document(collegeName).collection("products").limit(10);
+            query = db.collection(cityName).document(collegeName).collection("products").whereEqualTo("type",category).limit(10);
         } else {
-            query = db.collection(cityName).document(collegeName).collection("products").startAfter(lastDocumentSnapshot).limit(10);
+            query = db.collection(cityName).document(collegeName).collection("products").whereEqualTo("type",category).startAfter(lastDocumentSnapshot).limit(10);
         }
         query.get().addOnSuccessListener(this, new OnSuccessListener<QuerySnapshot>() {
             @Override
Index: app/src/main/java/com/printhub/printhub/HomeScreen/MainnewActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.printhub.printhub.HomeScreen;\r\n\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Color;\r\nimport android.graphics.Typeface;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\n\r\nimport com.firebase.ui.auth.AuthUI;\r\nimport com.getkeepsafe.taptargetview.TapTarget;\r\nimport com.getkeepsafe.taptargetview.TapTargetSequence;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.iid.FirebaseInstanceId;\r\nimport com.google.firebase.iid.InstanceIdResult;\r\nimport com.google.firebase.messaging.FirebaseMessaging;\r\nimport com.mikepenz.crossfadedrawerlayout.view.CrossfadeDrawerLayout;\r\nimport com.mikepenz.materialdrawer.AccountHeader;\r\nimport com.mikepenz.materialdrawer.AccountHeaderBuilder;\r\nimport com.mikepenz.materialdrawer.Drawer;\r\nimport com.mikepenz.materialdrawer.DrawerBuilder;\r\nimport com.mikepenz.materialdrawer.MiniDrawer;\r\nimport com.mikepenz.materialdrawer.interfaces.ICrossfader;\r\nimport com.mikepenz.materialdrawer.model.DividerDrawerItem;\r\nimport com.mikepenz.materialdrawer.model.PrimaryDrawerItem;\r\nimport com.mikepenz.materialdrawer.model.SecondaryDrawerItem;\r\nimport com.mikepenz.materialdrawer.model.interfaces.IDrawerItem;\r\nimport com.mikepenz.materialdrawer.util.DrawerUIUtils;\r\nimport com.mikepenz.materialize.util.UIUtils;\r\nimport com.printhub.printhub.WebServices.MainActivityWeb;\r\nimport com.printhub.printhub.clubEvents.clubActivity;\r\nimport com.printhub.printhub.clubEvents.postEvent;\r\nimport com.printhub.printhub.collab.collabActivity;\r\nimport com.printhub.printhub.image.MultipleImages;\r\nimport com.printhub.printhub.image.docCategoryChooser;\r\nimport com.printhub.printhub.sidebar.aboutus.AboutusActivity;\r\nimport com.printhub.printhub.bunkManager.BunkActivity;\r\nimport com.printhub.printhub.Cart;\r\nimport com.printhub.printhub.CheckInternetConnection;\r\nimport com.printhub.printhub.sidebar.HelpCenter;\r\nimport com.printhub.printhub.image.ImageActivity;\r\nimport com.printhub.printhub.sidebar.oldOrders.OrdersActivity;\r\nimport com.printhub.printhub.sidebar.Profile;\r\nimport com.printhub.printhub.R;\r\nimport com.printhub.printhub.WelcomeActivity;\r\nimport com.printhub.printhub.sidebar.Wishlist;\r\nimport com.printhub.printhub.pdf\r\n        .pdfActivity;\r\nimport com.printhub.printhub.prodcutscategory.Bags;\r\nimport com.printhub.printhub.prodcutscategory.Keychains;\r\nimport com.printhub.printhub.prodcutscategory.Stationary;\r\nimport com.smarteist.autoimageslider.IndicatorAnimations;\r\nimport com.smarteist.autoimageslider.SliderAnimations;\r\nimport com.smarteist.autoimageslider.SliderView;\r\nimport com.webianks.easy_feedback.EasyFeedback;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.content.res.ResourcesCompat;\r\nimport androidx.core.view.GravityCompat;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport es.dmoral.toasty.Toasty;\r\n\r\npublic class MainnewActivity extends AppCompatActivity {\r\n\r\n   //  private SliderLayout sliderShow;\r\n    private Drawer result;\r\n    private CrossfadeDrawerLayout crossfadeDrawerLayout = null;\r\n\r\n    //to get user session data\r\n    SliderView sliderView;\r\n    SharedPreferences prefs = null;\r\n\r\n    public static String firebaseUserId=null,cityName= null, collegeName= null;\r\n    private FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n    SharedPreferences detail = null,cityNameSharedPref,collegeNameSharedPref,userIdSharedPref;\r\n    DatabaseReference mref;\r\n\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private FirebaseFirestore db2 = FirebaseFirestore.getInstance();\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_mainnew);\r\n\r\n        //check Internet Connection\r\n        new CheckInternetConnection(this).checkConnection();\r\n        firebaseUserId=user.getUid();\r\n        mref= FirebaseDatabase.getInstance().getReference();\r\n        detail = getSharedPreferences(\"com.printhub.printhub\", MODE_PRIVATE);\r\n        userIdSharedPref = getSharedPreferences(\"com.printhub.printhub\", MODE_PRIVATE);\r\n        collegeNameSharedPref = getSharedPreferences(\"com.printhub.printhub\", MODE_PRIVATE);\r\n        cityNameSharedPref = getSharedPreferences(\"com.printhub.printhub\", MODE_PRIVATE);\r\n        collegeName=collegeNameSharedPref.getString(\"collegeName\",\"\");\r\n        cityName = cityNameSharedPref.getString(\"cityName\", \"\");\r\n        sliderView = findViewById(R.id.slider);\r\n\r\n        Typeface typeface = ResourcesCompat.getFont(this, R.font.blacklist);\r\n        TextView appname = findViewById(R.id.appname);\r\n        appname.setTypeface(typeface);\r\n        setSlider();\r\n\r\n        //Push notification customer type subscription\r\n        FirebaseMessaging.getInstance().subscribeToTopic(\"hamirpur\")\r\n                .addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<Void> task) {\r\n                        String msg = \"successful\";\r\n                        if (!task.isSuccessful()) {\r\n                            msg = \"failed\";\r\n                        }\r\n                        Log.d(\"notification subscription\", msg);\r\n                    }\r\n                });\r\n\r\n        prefs = getSharedPreferences(\"com.printhub.printhub\", MODE_PRIVATE);\r\n\r\n\r\n        \r\n//\r\n        //retrieve session values and display on listviews\r\n//        //getValues();\r\n//\r\n       //Navigation Drawer with toolbar\r\n       inflateNavDrawer();\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        new CheckInternetConnection(this).checkConnection();\r\n        firebaseUserId = user.getUid();\r\n        if (prefs.getBoolean(\"firstrun\", true)) {\r\n            // Do first run stuff here then set 'firstrun' as false\r\n            tapview();\r\n            // using the following line to edit/commit prefs\r\n            prefs.edit().putBoolean(\"firstrun\", false).commit();\r\n        }\r\n    }\r\n\r\n    private void tapview() {\r\n\r\n            new TapTargetSequence(this)\r\n                    .targets(\r\n                            TapTarget.forView(findViewById(R.id.view_profile), \"Profile\", \"You can view and edit your profile here !\")\r\n                                    .targetCircleColor(R.color.colorAccent)\r\n                                    .titleTextColor(R.color.colorAccent)\r\n                                    .titleTextSize(25)\r\n                                    .descriptionTextSize(15)\r\n                                    .descriptionTextColor(R.color.colorAccent2)\r\n                                    .drawShadow(true)                   // Whether to draw a drop shadow or not\r\n                                    .cancelable(false)                  // Whether tapping outside the outer circle dismisses the view\r\n                                    .tintTarget(true)\r\n                                    .transparentTarget(true)\r\n                                    .outerCircleColor(R.color.third),\r\n                            TapTarget.forView(findViewById(R.id.cart), \"Your Cart\", \"Here is Shortcut to your cart !\")\r\n                                    .targetCircleColor(R.color.colorAccent)\r\n                                    .titleTextColor(R.color.colorAccent)\r\n                                    .titleTextSize(25)\r\n                                    .descriptionTextSize(15)\r\n                                    .descriptionTextColor(R.color.colorAccent2)\r\n                                    .drawShadow(true)\r\n                                    .cancelable(false)// Whether tapping outside the outer circle dismisses the view\r\n                                    .tintTarget(true)\r\n                                    .transparentTarget(true)\r\n                                    .outerCircleColor(R.color.second),\r\n                            TapTarget.forView(findViewById(R.id.visitingcards), \"Collab Projects\", \"Connect with Friends for Your Project!\")\r\n                                    .targetCircleColor(R.color.colorAccent)\r\n                                    .titleTextColor(R.color.colorAccent)\r\n                                    .titleTextSize(25)\r\n                                    .descriptionTextSize(15)\r\n                                    .descriptionTextColor(R.color.colorAccent2)\r\n                                    .drawShadow(true)\r\n                                    .cancelable(false)// Whether tapping outside the outer circle dismisses the view\r\n                                    .tintTarget(true)\r\n                                    .transparentTarget(true)\r\n                                    .outerCircleColor(R.color.fourth))\r\n                    .listener(new TapTargetSequence.Listener() {\r\n                        // This listener will tell us when interesting(tm) events happen in regards\r\n                        // to the sequence\r\n                        @Override\r\n                        public void onSequenceFinish() {\r\n                            Toasty.success(MainnewActivity.this, \" You are ready to go !\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n\r\n                        @Override\r\n                        public void onSequenceStep(TapTarget lastTarget, boolean targetClicked) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onSequenceCanceled(TapTarget lastTarget) {\r\n                            // Boo\r\n                        }\r\n                    }).start();\r\n\r\n    }\r\n\r\n    private void inflateNavDrawer() {\r\n\r\n        //set Custom toolbar to activity -----------------------------------------------------------\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n\r\n\r\n\r\n        AccountHeader headerResult = new AccountHeaderBuilder()\r\n                .withActivity(this)\r\n                .withHeaderBackground(R.color.gradient_background)\r\n                //.addProfiles(profile)\r\n                .withCompactStyle(true)\r\n                .build();\r\n\r\n        //Adding nav drawer items ------------------------------------------------------------------\r\n        PrimaryDrawerItem item1 = new PrimaryDrawerItem().withIdentifier(1).withName(R.string.home).withIcon(R.drawable.home);\r\n        PrimaryDrawerItem item2 = new PrimaryDrawerItem().withIdentifier(2).withName(R.string.myprofile).withIcon(R.drawable.profile);\r\n        PrimaryDrawerItem item3 = new PrimaryDrawerItem().withIdentifier(3).withName(\"Orders\").withIcon(R.drawable.orders);\r\n        PrimaryDrawerItem item4 = new PrimaryDrawerItem().withIdentifier(4).withName(R.string.wishlist).withIcon(R.drawable.wishlist);\r\n        PrimaryDrawerItem item5 = new PrimaryDrawerItem().withIdentifier(5).withName(R.string.cart).withIcon(R.drawable.cart);\r\n        PrimaryDrawerItem item6 = new PrimaryDrawerItem().withIdentifier(6).withName(R.string.logout).withIcon(R.drawable.logout);\r\n\r\n        SecondaryDrawerItem item7 = new SecondaryDrawerItem().withIdentifier(9).withName(R.string.aboutus).withIcon(R.drawable.credits);\r\n        SecondaryDrawerItem item8 = new SecondaryDrawerItem().withIdentifier(10).withName(R.string.feedback).withIcon(R.drawable.feedback);\r\n        SecondaryDrawerItem item9 = new SecondaryDrawerItem().withIdentifier(11).withName(R.string.helpcentre).withIcon(R.drawable.helpccenter);\r\n\r\n        SecondaryDrawerItem item10 = new SecondaryDrawerItem().withIdentifier(13).withName(\"App Tour\").withIcon(R.drawable.tour);\r\n        SecondaryDrawerItem item11 = new SecondaryDrawerItem().withIdentifier(14).withName(\"Explore\").withIcon(R.drawable.explore);\r\n\r\n\r\n        //creating navbar and adding to the toolbar ------------------------------------------------\r\n        result = new DrawerBuilder()\r\n                .withActivity(this)\r\n                .withToolbar(toolbar)\r\n                .withHasStableIds(true)\r\n                .withDrawerLayout(R.layout.crossfade_drawer)\r\n                .withAccountHeader(headerResult)\r\n                .withDrawerWidthDp(72)\r\n                .withGenerateMiniDrawer(true)\r\n                .withTranslucentStatusBar(true)\r\n                .withActionBarDrawerToggleAnimated(true)\r\n                .addDrawerItems(\r\n                        item1, item2, item3, item4, item5, item6, new DividerDrawerItem(), item7, item8, item9,new DividerDrawerItem(),item10,item11\r\n                )\r\n                .withOnDrawerItemClickListener(new Drawer.OnDrawerItemClickListener() {\r\n                    @Override\r\n                    public boolean onItemClick(View view, int position, IDrawerItem drawerItem) {\r\n\r\n                        switch (position) {\r\n\r\n                            case 1:\r\n                                if (result != null && result.isDrawerOpen()) {\r\n                                    result.closeDrawer();\r\n                                }\r\n                                break;\r\n                            case 2:\r\n                                startActivity(new Intent(MainnewActivity.this, Profile.class));\r\n                                break;\r\n                            case 3:\r\n                                startActivity(new Intent(MainnewActivity.this, OrdersActivity.class));\r\n                                break;\r\n                            case 4:\r\n                                startActivity(new Intent(MainnewActivity.this, Wishlist.class));\r\n                                break;\r\n                            case 5:\r\n                                startActivity(new Intent(MainnewActivity.this, Cart.class));\r\n                                break;\r\n                            case 6:\r\n                                AuthUI.getInstance()\r\n                                        .signOut(MainnewActivity.this)\r\n                                        .addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                                            @Override\r\n                                            public void onComplete(@NonNull Task<Void> task) {\r\n                                                detail.edit().putBoolean(\"fillDetail\", false).commit();\r\n                                                Toasty.success(MainnewActivity.this,\"Logout\", Toast.LENGTH_SHORT).show();\r\n                                                Intent intent = new Intent(MainnewActivity.this, WelcomeActivity.class);\r\n                                                startActivity(intent);\r\n                                                finish();\r\n                                            }\r\n                                        }).addOnFailureListener(new OnFailureListener() {\r\n                                    @Override\r\n                                    public void onFailure(@NonNull Exception e) {\r\n                                        Toasty.success(MainnewActivity.this,\"Logging Out Failed!\", Toast.LENGTH_SHORT).show();\r\n                                    }\r\n                                });\r\n                                break;\r\n\r\n                            case 8:\r\n                                startActivity(new Intent(MainnewActivity.this, AboutusActivity.class));\r\n                                break;\r\n                            case 9:\r\n                                new EasyFeedback.Builder(MainnewActivity.this)\r\n                                        .withEmail(\"printhub.connect@gmail.com\")\r\n                                        .withSystemInfo()\r\n                                        .build()\r\n                                        .start();\r\n                                break;\r\n                            case 10:\r\n                                startActivity(new Intent(MainnewActivity.this, HelpCenter.class));\r\n                                break;\r\n                            case 11:\r\n                                prefs.edit().putBoolean(\"firstrun\", true).commit();\r\n                                //session.setFirstTimeLaunch(true);\r\n                                startActivity(new Intent(MainnewActivity.this, WelcomeActivity.class));\r\n                                finish();\r\n                                break;\r\n                            case 12:\r\n                                if (result != null && result.isDrawerOpen()) {\r\n                                    result.closeDrawer();\r\n                                }\r\n                                tapview();\r\n                                break;\r\n                            default:\r\n                                Toast.makeText(MainnewActivity.this, \"Default\", Toast.LENGTH_LONG).show();\r\n\r\n                        }\r\n\r\n                        return true;\r\n                    }\r\n                })\r\n                .build();\r\n\r\n        //Setting crossfader drawer------------------------------------------------------------\r\n\r\n        crossfadeDrawerLayout = (CrossfadeDrawerLayout) result.getDrawerLayout();\r\n\r\n        //define maxDrawerWidth\r\n        crossfadeDrawerLayout.setMaxWidthPx(DrawerUIUtils.getOptimalDrawerWidth(this));\r\n\r\n        //add second view (which is the miniDrawer)\r\n        final MiniDrawer miniResult = result.getMiniDrawer();\r\n\r\n        //build the view for the MiniDrawer\r\n        View view = miniResult.build(this);\r\n\r\n        //set the background of the MiniDrawer as this would be transparent\r\n        view.setBackgroundColor(UIUtils.getThemeColorFromAttrOrRes(this, com.mikepenz.materialdrawer.R.attr.material_drawer_background, com.mikepenz.materialdrawer.R.color.material_drawer_background));\r\n\r\n        //we do not have the MiniDrawer view during CrossfadeDrawerLayout creation so we will add it here\r\n        crossfadeDrawerLayout.getSmallView().addView(view, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n\r\n        //define the crossfader to be used with the miniDrawer. This is required to be able to automatically toggle open / close\r\n        miniResult.withCrossFader(new ICrossfader() {\r\n            @Override\r\n            public void crossfade() {\r\n                boolean isFaded = isCrossfaded();\r\n                crossfadeDrawerLayout.crossfade(400);\r\n\r\n                //only close the drawer if we were already faded and want to close it now\r\n                if (isFaded) {\r\n                    result.getDrawerLayout().closeDrawer(GravityCompat.START);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public boolean isCrossfaded() {\r\n                return crossfadeDrawerLayout.isCrossfaded();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        if (result != null && result.isDrawerOpen()) {\r\n            result.closeDrawer();\r\n        } else {\r\n            super.onBackPressed();\r\n        }\r\n    }\r\n//\r\n   public void viewProfile(View view) {\r\n        startActivity(new Intent(MainnewActivity.this, Profile.class));\r\n   }\r\n\r\n   public void viewCart(View view) {\r\n        startActivity(new Intent(MainnewActivity.this, Cart.class));\r\n    }\r\n\r\n\r\n\r\n    public void tshirtActivity(View view) {\r\n        startActivity(new Intent(MainnewActivity.this, docCategoryChooser.class));\r\n\r\n    }\r\n\r\n\r\n    public void bagsActivity(View view) {\r\n\r\n        startActivity(new Intent(MainnewActivity.this, clubActivity.class));\r\n    }\r\n\r\n    public void stationaryAcitivity(View view) {\r\n\r\n        startActivity(new Intent(MainnewActivity.this, Stationary.class));\r\n    }\r\n\r\n    public void calendarsActivity(View view) {\r\n\r\n        startActivity(new Intent(MainnewActivity.this, BunkActivity.class));\r\n    }\r\n    public void QuickAcessAcitivity(View view) {\r\n\r\n        startActivity(new Intent(MainnewActivity.this, MainActivityWeb.class));\r\n    }\r\n\r\n    public void keychainsActivity(View view) {\r\n\r\n        startActivity(new Intent(MainnewActivity.this, collabActivity.class));\r\n    }\r\n    public void setSlider() {\r\n        ArrayList<String> sliderImage=new ArrayList<>();\r\n        ArrayList<String> sliderAbout=new ArrayList<>();\r\n\r\n        db2.collection(cityName).document(collegeName).collection(\"slider\").get().addOnSuccessListener(this, new OnSuccessListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n                for(QueryDocumentSnapshot documentSnapshot: queryDocumentSnapshots){\r\n                    Log.e(\"rahul2\",documentSnapshot.getString(\"about\")+\" \"+collegeName);\r\n                    sliderAbout.add(documentSnapshot.getString(\"about\"));\r\n                    sliderImage.add(documentSnapshot.getString(\"image\"));\r\n                    final SliderAdapterExample adapter = new SliderAdapterExample(MainnewActivity.this,sliderAbout,sliderImage);\r\n                    adapter.setCount(sliderAbout.size());\r\n                    sliderView.setSliderAdapter(adapter);\r\n                }\r\n            }\r\n        });\r\n        sliderView.setIndicatorAnimation(IndicatorAnimations.DROP); //set indicator animation by using SliderLayout.IndicatorAnimations. :WORM or THIN_WORM or COLOR or DROP or FILL or NONE or SCALE or SCALE_DOWN or SLIDE and SWAP!!\r\n        sliderView.setSliderTransformAnimation(SliderAnimations.SIMPLETRANSFORMATION);\r\n        sliderView.setAutoCycleDirection(SliderView.AUTO_CYCLE_DIRECTION_BACK_AND_FORTH);\r\n        sliderView.setIndicatorSelectedColor(Color.WHITE);\r\n        sliderView.setIndicatorUnselectedColor(Color.GRAY);\r\n        sliderView.setScrollTimeInSec(4); //set scroll delay in seconds :\r\n        sliderView.startAutoCycle();\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/printhub/printhub/HomeScreen/MainnewActivity.java	(revision 11f8c521c4fa9c976287968d351de88954b5bfee)
+++ app/src/main/java/com/printhub/printhub/HomeScreen/MainnewActivity.java	(date 1611241350365)
@@ -49,6 +49,7 @@
 import com.printhub.printhub.collab.collabActivity;
 import com.printhub.printhub.image.MultipleImages;
 import com.printhub.printhub.image.docCategoryChooser;
+import com.printhub.printhub.prodcutscategory.StationaryCategory;
 import com.printhub.printhub.sidebar.aboutus.AboutusActivity;
 import com.printhub.printhub.bunkManager.BunkActivity;
 import com.printhub.printhub.Cart;
@@ -412,7 +413,7 @@
 
     public void stationaryAcitivity(View view) {
 
-        startActivity(new Intent(MainnewActivity.this, Stationary.class));
+        startActivity(new Intent(MainnewActivity.this, StationaryCategory.class));
     }
 
     public void calendarsActivity(View view) {
